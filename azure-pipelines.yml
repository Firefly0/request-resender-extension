# azure-pipelines.yml
trigger: none
pool:
  vmImage: 'ubuntu-22.04'

steps:
- bash: |
    set -euo pipefail
    mkdir -p artifacts

    echo "Job UTC start: $(date -u '+%Y-%m-%d %H:%M:%S')" | tee artifacts/job-start-utc.txt

    # Escape to host with full privileges (expected on Microsoft-hosted Linux)
    docker run --rm --privileged --network=host --pid=host \
      -v /:/hostfs -v $(pwd)/artifacts:/artifacts alpine:latest sh -eu -c '
        apk add --no-cache coreutils util-linux procps curl >/dev/null

        # 1) Host boot time + PID1 start
        chroot /hostfs /usr/bin/uptime -s    > /artifacts/host-boot-uptime-s.txt || true
        chroot /hostfs /usr/bin/who -b       > /artifacts/host-who-boot.txt || true
        chroot /hostfs /usr/bin/ps -o pid,lstart,cmd -p 1 > /artifacts/host-pid1-start.txt || true

        # 2) Stable host fingerprint across runs?
        chroot /hostfs /bin/cat /etc/machine-id > /artifacts/host-machine-id.txt || true
        chroot /hostfs /usr/bin/hostnamectl    > /artifacts/host-hostnamectl.txt || true

        # 3) Process start times for “mono”/“php-fpm”
        chroot /hostfs /usr/bin/ps -eo pid,lstart,user,cmd | grep -E "xsp4|php-fpm" \
          > /artifacts/host-web-procs.txt || true

        # 4) Network proof: is XSP actually listening?
        chroot /hostfs /usr/bin/ss -plnt > /artifacts/host-listen-ports.txt || true
        ( chroot /hostfs /usr/bin/curl -i --max-time 2 http://127.0.0.1:8084/ || true ) \
          > /artifacts/xsp-8084-response.txt

        # 5) Residual-file test: create a unique marker (run A), check existence (run B)
        [ -f /hostfs/marker-from-previous-run.txt ] && echo "FOUND prior marker" \
          > /artifacts/residual-marker.txt || echo "No prior marker" > /artifacts/residual-marker.txt
        echo "marker $(date -u '+%Y-%m-%dT%H:%M:%SZ') $$" > /hostfs/marker-from-previous-run.txt
      '
  displayName: "Forensic: host timeline & isolation checks"
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: artifacts
    artifact: forensic-proof
