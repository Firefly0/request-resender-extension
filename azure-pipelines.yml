trigger: none
pr: none

name: 'gateway-probe-$(Date:yyyyMMdd)$(Rev:.r)'

stages:
- stage: Probe
  displayName: Gateway Probes
  jobs:

  - job: Windows_VM_GatewayProbe
  displayName: Windows (VM) gateway probe
  pool: { vmImage: 'windows-latest' }
  steps:
  - powershell: |
      $ErrorActionPreference = 'Stop'

      function Get-DefaultGateway {
        $gw = (Get-NetRoute -DestinationPrefix '0.0.0.0/0' -ErrorAction SilentlyContinue |
               Sort-Object RouteMetric, InterfaceMetric |
               Select-Object -First 1).NextHop
        if (-not $gw) {
          $gw = (Get-NetIPConfiguration | Where-Object { $_.IPv4DefaultGateway } |
                 Select-Object -First 1).IPv4DefaultGateway.NextHop
        }
        $gw
      }

      function Test-TcpPort {
        param(
          [string]$Address,
          [int]$Port,
          [int]$TimeoutMs = 1000
        )
        try {
          $c = New-Object System.Net.Sockets.TcpClient
          $iar = $c.BeginConnect($Address,$Port,$null,$null)
          if (-not $iar.AsyncWaitHandle.WaitOne($TimeoutMs)) { $c.Close(); return "closed:$Port" }
          $c.EndConnect($iar); $c.Close(); "open:$Port"
        } catch { "closed:$Port" }
      }

      $gw = Get-DefaultGateway
      Write-Host "GW=$gw"

      $lines = New-Object 'System.Collections.Generic.List[string]'
      $lines.Add("## Windows (VM) gateway probe")
      $lines.Add("")
      $lines.Add("**Gateway:** $gw")
      $lines.Add("")
      $lines.Add("**Ports:**")
      foreach ($p in 5000,5001,2375,2376,80,443,8080) {
        $lines.Add("- " + (Test-TcpPort -Address $gw -Port $p -TimeoutMs 1000))
      }

      $lines.Add("")
      $lines.Add("--- HTTP /v2/ ---")
      try {
        $resp = Invoke-WebRequest -UseBasicParsing -Uri ("http://{0}:5000/v2/" -f $gw) -TimeoutSec 2
        $lines.Add(("HTTP/{0} {1}" -f $resp.ProtocolVersion, [int]$resp.StatusCode))
      } catch { $lines.Add("connection-refused") }

      $lines.Add("")
      $lines.Add("--- HTTPS /v2/ ---")
      try {
        # ignore TLS errors during the probe
        [System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }
        $resp2 = Invoke-WebRequest -UseBasicParsing -Uri ("https://{0}:5001/v2/" -f $gw) -TimeoutSec 2 -ErrorAction Stop
        $lines.Add(("HTTP/{0} {1}" -f $resp2.ProtocolVersion, [int]$resp2.StatusCode))
      } catch { $lines.Add("connection-refused") } finally {
        [System.Net.ServicePointManager]::ServerCertificateValidationCallback = $null
      }

      $outDir = "$(Build.ArtifactStagingDirectory)".Replace("\","/")
      New-Item -ItemType Directory -Force -Path $outDir | Out-Null
      $summary = Join-Path $outDir 'summary.md'
      $lines | Out-File -FilePath $summary -Encoding utf8
      Get-Content $summary | Write-Host
    displayName: Probe (VM)

# (Optional) let the final summary run even if a probe fails
# - in your Summary job:
#   condition: always()

