trigger:
- main
pr:
- main

pool:
  vmImage: 'ubuntu-22.04'

variables:
  ART_DIR: $(Build.SourcesDirectory)/artifacts-cache

steps:
- checkout: self
  clean: false

- bash: |
    set -e
    mkdir -p "${ART_DIR}"

    echo "== Tool cache metadata ==" > "${ART_DIR}/toolcache.txt"
    for p in /opt/hostedtoolcache /usr/local/lib /usr/local/bin; do
      echo "# ls -la $p" >> "${ART_DIR}/toolcache.txt"
      ls -la "$p" >> "${ART_DIR}/toolcache.txt" 2>&1 || true
    done

    echo "== Write probe =="
    date > /opt/hostedtoolcache/__azdo_write_probe.txt 2>> "${ART_DIR}/write-probe.err" || true
    if [ -f /opt/hostedtoolcache/__azdo_write_probe.txt ]; then
      echo "wrote-file-success" >> "${ART_DIR}/toolcache.txt"
      rm -f /opt/hostedtoolcache/__azdo_write_probe.txt || true
    else
      echo "write-denied-or-blocked" >> "${ART_DIR}/toolcache.txt"
    fi

    echo "== Docker socket & permissions ==" > "${ART_DIR}/docker.sock.txt"
    ls -la /var/run/docker.sock >> "${ART_DIR}/docker.sock.txt" 2>&1 || true
    id >> "${ART_DIR}/docker.sock.txt"
    docker info >> "${ART_DIR}/docker.sock.txt" 2>&1 || true

    echo "== Service containers namespace behavior =="
    docker run --rm alpine:3.20 sh -c 'ps -eo pid,user,comm | head -n 20' \
      > "${ART_DIR}/service-container-ps.txt" 2>&1 || true
  displayName: Cache write & docker socket probe

- task: PublishPipelineArtifact@1
  displayName: Publish cache/docker artifacts
  inputs:
    targetPath: $(Build.SourcesDirectory)/artifacts-cache
    artifact: cache-and-docker-proof
