trigger:
- main
pr:
- main

pool:
  vmImage: 'ubuntu-22.04'

variables:
  ART_DIR: $(Build.SourcesDirectory)/artifacts-argv

steps:
- checkout: self
  clean: false

- bash: |
    set -e
    mkdir -p "${ART_DIR}"
    echo "== Generating synthetic secret and launching a process with it in argv =="
    SECRET="argv-secret-$$-$(date +%s)"
    echo "marker=[REDACTED]" > "${ART_DIR}/context.txt"

    # Start a sleeper with the secret in its argv (not env)
    /bin/sh -c 'sleep 45' "${SECRET}" &
    SLEEP_PID=$!
    echo "sleep-pid=${SLEEP_PID}" >> "${ART_DIR}/context.txt"

    sleep 2
    echo "== ps snapshot =="
    ps -eo pid,user,args | sed -E 's/argv-secret-[^ ]+/[REDACTED]/g' > "${ART_DIR}/ps-snapshot.txt" || true

    echo "== /proc cmdline (if present) =="
    [ -r "/proc/${SLEEP_PID}/cmdline" ] && tr '\0' ' ' < "/proc/${SLEEP_PID}/cmdline" \
      | sed -E 's/argv-secret-[^ ]+/[REDACTED]/g' > "${ART_DIR}/proc-cmdline.txt" || true

    # Clean up
    kill "${SLEEP_PID}" 2>/dev/null || true
  displayName: Argv leak self-check

- task: PublishPipelineArtifact@1
  displayName: Publish argv-leak artifacts
  inputs:
    targetPath: $(Build.SourcesDirectory)/artifacts-argv
    artifact: argv-leak-proof
